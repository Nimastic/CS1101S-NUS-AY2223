// TASK 1

const test_curve =
    t => make_point(t, 0.5 + (math_sin(4 * (math_PI * t)) / 2));


function stack(c1, c2) {
    return t => t <= 0.5
           ? scale(1, 0.5, 0)(c2)(2 * t) // bottom
           : translate(0, 0.5, 0)(scale(1, 0.5, 0)(c1))(2 * t - 1); // top
}

// Test
draw_points(10000)(stack(test_curve, test_curve)); 

//draw_points(10000)(translate(0, 0.5, 0)(scale(1, 0.5, 0)(test_curve)));


// TASK 2
const test_curve =
    t => make_point(t, 0.5 + (math_sin(4 * (math_PI * t)) / 2));

function stack_frac(frac, c1, c2) {
    return t => t < frac
           ? translate(0, 1 - frac, 0)(scale(1, frac, 0)(c1))( 1 / frac * t)
           // top
           : scale(1, 1 - frac, 0)(c2)( 1 / frac * t - 1 ); 
           // bottom
}

// frac is 0.5 for stack function below

function stack(c1, c2) {
    return t => t <= 0.5
           ? scale(1, 0.5, 0)(c2)(2 * t)
           // bottom
           : translate(0, 0.5, 0)(scale(1, 0.5, 0)(c1))(2 * t - 1);
           
}

// Test

/* draw_points(10000)(stack(test_curve, test_curve)); */

draw_points(10000)(stack_frac(1/5, test_curve, test_curve));


draw_points(10000)
    (stack_frac(1 / 5,
                test_curve,
                stack_frac(1 / 2, test_curve, test_curve)));
